jobs:
- job: DockerCheck
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - script: |
      docker version
    displayName: VS2017-WIN2016 agent Check Docker tool version
  - script: |
      docker image ls -a 
    displayName: check the last update date of the available docker images

- job: VS2017ToolingCheck
  dependsOn: DockerCheck
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  # - task: MSBuild@1
  #   displayName: Check MSBUILD installed version and also build a sample NETFX 4.7.1 solution 
  #   solution: $(Build.SourcesDirectory)\src\NETFramework4.7\NETFx4.7.SampleSolution\NETFx4.7.SampleSolution.sln
  #   msbuildArguments: /t:Clean

  - script: |
      echo "executing dotnet --info"
      dotnet --info
    displayName: Check the availability of .NET Core SDK installed in the agents

- job: DotnetCoreBuild2_1
  dependsOn: VS2017ToolingCheck
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - script: |
      echo "Start building Sample Razor in .NETCore 2.1"
      cd src\netcore2.1
      dotnet build SampleAspNetCore2.1.sln
    failOnStderr: true
    displayName: Build Sample Razor in .NET Core 2.1
    
  - script: |
      echo "Perform dotnet publish SampleRazor"
      cd src\netcore2.1
      dotnet publish --configuration Release SampleRazor\SampleRazor.csproj -o $(Build.ArtifactStagingDirectory)
    displayName: Publish SampleRazor

  - task: PublishBuildArtifacts@1
    displayName: Publish SampleRazor artifact

- job: DotnetCoreBuild3_0
  dependsOn: DotnetCoreBuild2_1
  pool:
    vmImage: 'windows-2019'

  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: 3.0.100

  - script: |
      echo "Start building Sample Razor in .NETCore 2.1"
      cd src\netcore3.0
      dotnet build SampleNetCore3.0.sln
    failOnStderr: true
    displayName: Build Sample Windows Desktop in .NET Core 3.0
    
  - script: |
      echo "Perform dotnet publish SampleRazor"
      cd src\netcore3.0
      dotnet publish --configuration Release NetCore3.WinForms\NetCore3.WinForms.csproj -o $(Build.ArtifactStagingDirectory)
    displayName: Publish SampleNetCore3.0

  - task: PublishBuildArtifacts@1
    displayName: Publish SampleNetCore3.0 artifact
